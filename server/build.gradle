buildscript {
  ext {
	springBootVersion = '1.3.3.RELEASE'
  }
  repositories {
	mavenCentral()
	maven { url 'http://repo.spring.io/libs-snapshot' }
	maven { url 'https://repo.spring.io/plugins-release' }
  }
  dependencies {
	classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	classpath("io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE")
	classpath("org.springframework.build.gradle:propdeps-plugin:0.0.7")
  }
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "propdeps"

repositories {
  mavenCentral()
  maven {
	url 'http://repo.spring.io/libs-snapshot'

  }
}

ext {
  javaVersion = '1.8';
}

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

jar {
  baseName = 'spring-resource-handling'
  version = '0.1.0.BUILD-SNAPSHOT'
}

// war build
/*
apply plugin: 'war'
war {
	baseName = 'spring-resource-handling'
	version =  '0.1.0.BUILD-SNAPSHOT'
}
*/

configurations {
  providedRuntime
}

dependencies {
  compile project(':client')
  compile("org.springframework.boot:spring-boot-starter-web")
  compile("org.springframework.boot:spring-boot-starter-mustache")
  compile("org.springframework.boot:spring-boot-starter-velocity")
  optional("org.springframework.boot:spring-boot-configuration-processor")
  optional("org.springframework.boot:spring-boot-devtools")

  compile("org.apache.tomcat.embed:tomcat-embed-jasper")
  compile("javax.servlet:jstl")
  compile("org.codehaus.groovy:groovy-all")

  testCompile("org.springframework.boot:spring-boot-starter-test")
  testCompile("org.testng:testng")
}

compileJava.dependsOn(processResources)